resolver 127.0.0.11;      # Docker DNS

server {
    listen 80 default_server;
    listen [::]:80 ipv6only=on default_server;
    server_name _;
    deny all;
}

server {
    listen 80;

    server_name ${NGINX_HOST} ${PRIVATE_IP} localhost;

    ssi off;
    server_tokens off; # hides version on 404 or 500 pages

    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_hide_header X-Powered-By;  # Hide upstream proxy headers
    # End Proxy headers

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";  # avoid clickjacking
    # add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self' data:; media-src 'self' blob: data: https://lerkasan.net lerkasan.net boanerges-radio-voice.s3.amazonaws.com; style-src 'self' data: https://fonts.googleapis.com fonts.googleapis.com https://use.fontawesome.com use.fontawesome.com 'unsafe-inline'; font-src 'self' data: https://fonts.googleapis.com fonts.googleapis.com https://use.fontawesome.com use.fontawesome.com; frame-src 'self'; connect-src 'self' https://lerkasan.net lerkasan.net api.deepgram.com wss://api.deepgram.com api.deepgram.com https://apis.google.com https://boanerges-radio-voice.s3.us-east-1.amazonaws.com boanerges-radio-voice.s3.us-east-1.amazonaws.com https://transcribe.us-east-1.amazonaws.com transcribe.us-east-1.amazonaws.com; object-src 'none' ";
    add_header X-Content-Type-Options nosniff;
    # End Security headers

    # Buffer policy
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    client_max_body_size 20M;              # 1k, increase it if receiving file uploads via the POST method
    large_client_header_buffers 2 1k;
    # End Buffer policy

    # Timeouts
    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     5 5;
    send_timeout          10;
    # End Timeouts

    # Block bots, scanners, etc.
    if ($http_user_agent ~* LWP::Simple|BBBike|msnbot|scrapbot) {
        return 403;
    }
    # End block bots

    # Only GET, POST, PUT, DELETE, HEAD requests are allowed
    if ( $request_method !~ ^(GET|POST|PUT|DELETE|HEAD)$ ) {
        return 405;
    }
    # End HTTP Methods

    # Only requests to lerkasan.net domain are allowed
    if ($host !~ ^(${NGINX_HOST}|${PRIVATE_IP}|localhost)$ ) {
        return 444;
    }

    if ($http_host !~ ^(${NGINX_HOST}|${PRIVATE_IP}|localhost)$ ) {
        return 444;
    }
    #


    # Backend
#    location /api/ {
#        proxy_pass http://backend:8080/api/;
#        proxy_redirect off;
#        autoindex off;
#
#        limit_except GET HEAD POST PUT DELETE { deny all; }
#    }

    # Frontend
    location / {
        root   /var/www/${APP_NAME};
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        autoindex off;

        limit_except GET HEAD POST { deny all; }
    }
    
    location ~ /\.git.* {
        deny all;
    }

    location ~ /\.(?!well-known).* {
             deny all;
    }
    location ~ /\.(.*)/?(.*)? {
             deny all;
    }
}
