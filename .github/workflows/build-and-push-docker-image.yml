name: Reusable workflow to build and push docker image

on:
  workflow_call:
    inputs:
      app_part:
        required: true
        type: string
#      environment:
#        required: false
#        type: string
      backend_host:
        required: false
        type: string
      backend_protocol:
        required: false
        type: string
      app_name:
        required: false
        type: string
      app_version:
        required: false
        type: string
      aws_region:
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/${{ vars.APPLICATION_NAME }}-${{ inputs.app_part }}
  IMAGE_TAG: ${{ github.sha }}

jobs:

  publish_docker_image:
    name: Build and Push Docker Image to GitHub Container Registry
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write       # For signing images via sigstore/cosign with GitHub OIDC Token
    steps:
      - name: Checkout repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539   # v3.5.3

      - name: Install cosign
        uses: sigstore/cosign-installer@d13028333d784fcc802b67ec924bcebe75aa0a5f   # v3.1.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc   # v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: docker_meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175   # v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,format=long

      - name: Build and Push frontend container images
#        if: ${{ inputs.app_part }} == 'frontend'
        if: ${{ inputs.app_part == 'frontend' }}
        id: docker_build_and_push_frontend
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825   # v4.1.1
        with:
          file: Dockerfile.${{ inputs.app_part }}
          build-args: |
            VUE_APP_BACKEND_HOST=${{ inputs.backend_host }}
            VUE_APP_BACKEND_PROTOCOL=${{ inputs.backend_protocol }}
            VUE_APP_AWS_REGION=${{ inputs.aws_region }}
            APP_NAME=${{ inputs.app_name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ steps.docker_meta.outputs.tags }}

      - name: Build and Push backend container images
#        if: ${{ inputs.app_part }} == 'backend'
        if: ${{ inputs.app_part == 'backend' }}
        id: docker_build_and_push_backend
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825   # v4.1.1
        with:
          file: Dockerfile.${{ inputs.app_part }}
          build-args: |
            APP_NAME=${{ inputs.app_name }}
            APP_VERSION=${{ inputs.app_version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ steps.docker_meta.outputs.tags }}

      - name: Sign the Docker images with GitHub OIDC Token
        env:
#          DIGEST: ${{ steps.docker_build_and_push_${{ inputs.app_part }}.outputs.digest }}
          DIGEST: ${{ format('steps.docker_build_and_push_{0}.outputs.digest', inputs.app_part) }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: cosign sign --yes "${TAGS}@${DIGEST}"
