name: Reusable workflow for provisioning AWS infrastructure

on:
  workflow_call:

env:
  AWS_REGION: 'us-east-1'
#  WORKING_DIRECTORY: './infra/terraform'
#  TF_database_name: ${{ secrets.DATABASE_NAME }}
#  TF_database_username: ${{ secrets.DATABASE_USERNAME }}
#  TF_database_password: ${{ secrets.DATABASE_PASSWORD }}

jobs:

  infrastructure:
    name: Provision AWS infrastructure
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: './infra/terraform'
#      TF_database_name: ${{ secrets.DATABASE_NAME }}
#      TF_database_username: ${{ secrets.DATABASE_USERNAME }}
#      TF_database_password: ${{ secrets.DATABASE_PASSWORD }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539   # v3.5.3

      - name: Get AWS Credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355   # v2.2.0
        with:
          #          role-to-assume: ${{ secrets.PIPELINE_IAM_ROLE }}
          #          role-session-name: GitHub-Action-Role
          aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1    # v2.0.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -no-color -input=false
        env:
          TF_VAR_database_name: ${{ secrets.DATABASE_NAME }}
          TF_VAR_database_username: ${{ secrets.DATABASE_USERNAME }}
          TF_VAR_database_password: ${{ secrets.DATABASE_PASSWORD }}


      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_database_name: ${{ secrets.DATABASE_NAME }}
          TF_VAR_database_username: ${{ secrets.DATABASE_USERNAME }}
          TF_VAR_database_password: ${{ secrets.DATABASE_PASSWORD }}