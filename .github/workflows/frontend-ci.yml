name: Build, test and deploy frontend

on:
  push:
    branches:
      - master
    paths:
      - 'frontend/**'
      - 'Dockerfile.frontend'
      - 'infra/nginx_config/**'

# for debugging purposes
  workflow_dispatch:

env:
  WORKING_DIRECTORY: './frontend'

jobs:

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    strategy:
      matrix:
        node-version: [ 16.x, 18.x ]
    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539     # v3.5.3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c   # v3.6.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'

      - name: Install dependencies
        run: npm ci
#        run: npm ci --prefix 'frontend/package.json'
#        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Build
        run: npm run build
#        run: npm run build --prefix 'frontend/package.json'
#        working-directory: ${{ env.WORKING_DIRECTORY }}


  test:
    name: Run Frontend Unit Tests
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    strategy:
      matrix:
        node-version: [ 16.x, 18.x ]
    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539     # v3.5.3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c   # v3.6.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'

      - name: Install dependencies
        run: npm ci
#        run: npm ci --prefix 'frontend/package.json'
#        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Build
        run: npm test
#        run: npm test --prefix 'frontend/package.json'
#        working-directory: ${{ env.WORKING_DIRECTORY }}


  build_push_docker_image:
    name: Push Frontend Docker image
    needs: [ build, test ]
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
      id-token: write       # For signing images via sigstore/cosign with GitHub OIDC Token
    uses: ./.github/workflows/reusable/build-and-push-docker-image.yml
    with:
      app_part: frontend
    secrets: inherit


  infrastructure:
    name: Provision AWS infrastructure
    needs: [ build, test, build_push_docker_image ]
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/reusable/provision-infrastructure.yml
    secrets: inherit


  deploy:
    name: Deploy to AWS
    needs: [ build, test, build_push_docker_image, infrastructure ]
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/reusable/deploy.yml
    secrets: inherit