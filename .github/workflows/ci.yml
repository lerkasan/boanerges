name: Build Jar and Test via Maven then Build and Push Docker Image

on:
  push:
    branches: [ $default-branch ]
    paths-ignore:
#      - '.github/**'
      - 'README.md'
      - '.gitignore'
      - '.dockerignore'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}

jobs:

  build_and_test:
    runs-on: ubuntu-latest
    permissions:
      checks: write                         # For JUnit Report via mikepenz/action-junit-report@v3
    name: Build and Test via Maven
    steps:
      - name: Checkout backend repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539     # v3.5.3

      - name: Set up JDK 17
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2   # v3.11.0
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build
        run: mvn --batch-mode -DskipTests package

      - name: Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: JUnit Report
        uses: mikepenz/action-junit-report@baaeba622e27b396105f35ec9ec4ee89ffcbd306   # v3.7.8
        if: always()
        with:
          job_name: JUnit Tests
          report_paths: '**target/surefire-reports/*.xml'
          fail_on_failure: true
          require_passed_tests: true
          detailed_summary: true

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write       # For signing images via sigstore/cosign with GitHub OIDC Token

    name: Build and Push Docker Image to ${{ env.REGISTRY }}
    steps:
      - name: Checkout backend repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539   # v3.5.3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@d13028333d784fcc802b67ec924bcebe75aa0a5f   # v3.1.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc   # v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: docker_meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175   # v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,format=long

      - name: Build and Push container images
        id: docker_build_and_push
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825   # v4.1.1
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ steps.docker_meta.outputs.tags }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.docker_build_and_push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: cosign sign --yes "${TAGS}@${DIGEST}"
